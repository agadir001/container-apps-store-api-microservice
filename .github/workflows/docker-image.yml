name: My Build and Deploy Docker Image CI
on:
  workflow_dispatch:
env:
  REGISTRY: sshtechacr007.azurecr.io
  executeBuild: 'false'
jobs:
  build:
    name: build images
    if: ${{ env.executeBuild }} == 'true'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        services:
          [
            { "appname": "node-service", "directory": "./node-service" },
            { "appname": "python-service", "directory": "./python-service" },
            { "appname": "go-service", "directory": "./go-service" },
          ]
    steps:
    - uses: actions/checkout@v3
      name: Checkout repository
    - uses: docker/login-action@v3.0.0
      name: Login to acr
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    - name: extract docker metadata
      id: metadata
      uses: docker/metadata-action@v5.4.0
      with:
        images: ${{ env.REGISTRY }}/apps-store/${{ matrix.services.appname }}
        tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=ref,event=branch
            type=sha
          
    - name: Docker build and push
      uses: docker/build-push-action@v5.1.0
      with:
        context: ${{ matrix.services.directory }}
        push: true
        tags: ${{ steps.metadata.outputs.tags }}
    - name: Output images tags
      run: echo "image-${{ matrix.services.appname }} = ${{ env.REGISTRY }}/apps-store/${{ matrix.services.appname }}"
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@v4.1.1
      - name: Azure Login
        uses: Azure/login@v1.5.0
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: deploy bicep
        uses: Azure/cli@v1.0.9
        with:
          inlineScript: |
            az group create -n ${{ secrets.RESOURCE_GROUP }} -l francecentral
            az deployment group create -g ${{ secrets.RESOURCE_GROUP }} --name deploybicep -f ./deploy/main.bicep \
             -p \
                minReplicas=0 \
                nodeImage='sshtechacr007.azurecr.io/apps-store/node-service:sha-6a6c864' \
                nodePort=3000 \
                pythonImage='sshtechacr007.azurecr.io/apps-store/python-service:sha-6a6c864' \
                pythonPort=5000 \
                goImage='sshtechacr007.azurecr.io/apps-store/go-service:sha-6a6c864' \
                goPort=8050 \
                containerRegistry=${{ env.REGISTRY }} \
                containerRegistryUsername=${{ secrets.REGISTRY_USERNAME }} \
                containerRegistryPassword=${{ secrets.REGISTRY_PASSWORD }} \
                deployApim=false
    
